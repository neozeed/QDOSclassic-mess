	INCLUDE	'DEV_ASM_Q40_HW_inc'
	INCLUDE	'DEV_ASM_QDOS_DEFINES_inc'
	INCLUDE	'CLSC_SRC_CORE_SER_inc'
	INCLUDE	'DEV_ASM_ISA_HW_inc'

	XDEF	HW_RESET,HW_ENABLE,HW_DISABLE
	XDEF	HW_BAUD
	XDEF	POLL_SERver,XINT_SERver

	XDEF	HW_VCTR_BEG
	XDEF	HW_VCTR.LEN

	XDEF	HARDTAG

	SECTION	SER

*******************************************************************
*
* SER_asm - Q40 specific routines for serial device driver
*	 - originated July 98 - Mark Swift
*	 - last modified 22/09/99 (MSW)

BASE:

*******************************************************************
*
* Begin custom vector routines

HW_VCTR_BEG:

*******************************************************************

HW_RESET:
	move.b	#0,MASTER_CHIP+SER_INT_ENABLE ; disable SER ints on board
	bra.s	SER_RESET

HW_ENABLE:
	move.b	#1,MASTER_CHIP+SER_INT_ENABLE ; enable SER ints on board
	bra.s	SER_ENABLE

HW_DISABLE:
	bra.s	SER_DISABLE

	INCLUDE	'CLSC_SRC_ISA_16650a_asm'	; Q40 uses 16650 equiv h/w

*******************************************************************
*
* End custom vector routines

NOPpad3:
	DCB.w ((0-(NOPpad3-BASE))&$3)/2,$4E71 ; pad to long word boundary

HW_VCTR_END:

HW_VCTR.LEN	EQU	(HW_VCTR_END-HW_VCTR_BEG)

*******************************************************************
*
*  external interrupt server
*  enters with a6=sys vars, a3=our (serial) vars

XINT_SERver:
	movem.l	d7/a0,-(a7)

XINT_TST:
	move.b	MASTER_CHIP+INT_REG,d0
	btst	#2,d0		; Serial interrupt?
	beq.s	XINT_OTHer	; nope, someone else's int.

; --------------------------------------------------------------
;  Identify the interrupt and act accordingly

	MOVE.L	SV_SER1C(a6),a2		; Receive queue channel 1
	lea	SER1_BASE+IO_8BIT,a1
	move.b	MASTER_CHIP+EXT_INT_REG,d0
	btst	#1,d0			; Serial 1/3 interrupt?
	bne.s	SER_XINT

	MOVE.L	SV_SER2C(a6),a2		; Receive queue channel 2
	lea	SER2_BASE+IO_8BIT,a1
	btst	#0,d0			; Serial 2/4 interrupt?
	bne.s	SER_XINT

; --------------------------------------------------------------
;  otherwise let another external interrupt server handle it

XINT_OTHer:
	movem.l	(a7)+,d7/a0
	rts

	INCLUDE	'CLSC_SRC_ISA_16650b_asm'	; Q40 uses 16650 equiv h/w

*******************************************************************
*
* Pad out to long words

NOPpad5:
	DCB.w ((0-(NOPpad5-BASE))&$3)/2,$4E71 ; pad to long word boundary

*******************************************************************

	END
