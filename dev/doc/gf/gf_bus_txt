GOLDFIRE EXPANSION REFERENCE
----------------------------

EXPANSION CONNECTOR DEFINITION

+=========+=========+=========+===============+=========+=========+=========+
| 32bit D | 32bit A | 8bit    | EXP.CONNECTOR | 8bit    | 32bit A | 32bit D |
+=========+=========+=========+=======+=======+=========+=========+=========+
|---------< GROUND  >---------| p  1b |  1a p |---------< GROUND  >---------|
| D26     | X       | D2      | *  2b |  2a * | D3      | X       | D27     |
| D25     | A25     | D1      | *  3b |  3a * | D4      | BS0     | D28     |
| D24     | A24     | D0      | *  4b |  4a * | D5      | BS1     | D29     |
|---------< -WTRQ   >---------| *  5b |  5a * | D6      | BS2     | D30     |
| H       | H       | -NTRQ   | *  6b |  6a * | D7      | BS3     | D31     |
|---------< -WR     >---------| *  7b |  7a * | A19     | A19     | D19     |
|---------< -TACK   >---------| ­  8b |  8a * | A18     | A18     | D18     |
|---------< -WDATA  >---------| *  9b |  9a * | A17     | A17     | D17     |
|---------< -AUTO   >---------| * 10b | 10a * | A16     | A16     | D16     |
| D15     | A15     | A15     | * 11b | 11a c |---------< CLK**   >---------|
|---------< -RESET  >---------| g 12b | 12a c |---------< -VPA**  >---------|
|---------< -RFSH** >---------| c 13b | 13a * | A14     | A14     | D14     |
| D23     | A23     | A23     | * 14b | 14a * | A13     | A13     | D13     |
|---------< POLL    >---------| g 15b | 15a * | A12     | A12     | D12     |
|---------< RESERVED>---------| r 16b | 16a * | A11     | A11     | D11     |
|---------< RESERVED>---------| r 17b | 17a * | A10     | A10     | D10     |
|---------< RESERVED>---------| r 18b | 18a * | A9      | A9      | D9      |
| D22     | A22     | A22     | * 19b | 19a * | A8      | A8      | D8      |
| D21     | A21     | A21     | * 20b | 20a * | A7      | A7      | D7      |
| D20     | A20     | A20     | * 21b | 21a * | A6      | A6      | D6      |
| D0      | X       | A0      | * 22b | 22a * | A5      | A5      | D5      |
|---------< ROMOE** >---------| c 23b | 23a * | A4      | A4      | D4      |
| D1      | X       | A1      | * 24b | 24a * | A3      | A3      | D3      |
| D2      | A2      | A2      | * 25b | 25a r |---------< RESERVED>---------|
|---------< GROUND  >---------| p 26b | 26a p |---------< GROUND  >---------|
|---------< IPL0**  >---------| c 27b | 27a + |---------< DDEC8   >---------|
|---------< -HINT   >---------| ­ 28b | 28a p |---------< GROUND  >---------|
|---------< -LINT   >---------| - 29b | 29a p |---------< GROUND  >---------|
|---------< -EINT   >---------| ­ 30b | 30a p |---------< +12V    >---------|
|---------< +5V     >---------| p 31b | 31a p |---------< -12V    >---------|
|---------< +5V     >---------| p 32b | 32a p |---------< +5V     >---------|
+=========+=========+=========+=======+=======+=========+=========+=========+

 NOTES:
========

TABLE HEADING:
32bit D   : 32 bit cycle data phase ( -WDATA is LOW )
32bit A   : 32 bit cycle address phase ( -WDATA is HIGH )
8bit      : QL compatible cycle

EXPANSION CONNECTOR SIGNAL TAGS (written beside the pin number):
p : power or ground pin
* : IO pin, 33 ohm series termination
- : Pull low, pulled to +5V on bus
+ : Pull high, pulled to 0V on bus
r : reserved, not connected on GF
c : compatibility pass-through, not used by GF, may be phased out in the future
g : generated by 'motherboard'

SIGNAL NOTATIONS:
-$        : active low signal
--< $ >-- : non-multiplexed signal
$**       : not used by GF, not connected on board
X         : Undefined state

SIGNAL DEFINITIONS:

Address & data:

Axx, Dxx:
Addres, data or multiplexed address and data lines, referred to depending on application (32bit or 8bit). Normally the following nomenclature is used:
nAxx or nDxx: narrow cycle pin definition, where Axx is A0..A23, Dxx is D0..7
wAxx/Dxx: wide cycle pin definition, where Axx is A2..25, Dxx is D0..31
w$/Dxx: wide cycle pin definition, $ is a special purpose signal, Dxx as above.
(for more data see below).
**** Subject to changes: the exact multiplexing scheme (which Axx is multiplexed with which Dxx and which $ is multiplexed with which Dxx) may change for optimisation of GoldFire PLDs.

Bus cycle control:

-NTRQ:
Narrow (8 bit) transfer request. This signal goes low when an 8bit cycle starts and is held low throughout the duration of the cycle. The signal uses the QL bus DSL pin and is compatible to the QL DSL signal. This signal does NOT go low when the autoterminated narrow IO area is acessed (see signal -AUTO below).

-WTRQ:
Wide (32 bit) transfer request. This signal goes low when a 32bit cycle starts and is held low throughout the duration of the cycle. The signal uses the QL bus BGL pin. Because of this, if the GF is used with a standard QL motherboard, the 68008 CPU MUST BE REMOVED from it's socket.

-WDATA:
Wide data phase. When this signal is low, the 32-bit cycle data phase is in progress. The signal uses the QL bus ASL pin and is NOT COMPATIBLE with it's previous function. ASL should not be used on QL peripherals anyway so this should not present a problem.

-WR:
Write cycle. When low, data is output to the bus when appropriate in the cycle. The signal is used in a similar manner for both the harrow and wide bus mode. In the wide bus mode, the signal goes low on a write cycle in the address phase and remains low throughout the cycle, to facilitate decoding. The signal uses the QL bus RDWL pin and is completely compatible with it.

-TACK:
Transfer acknowledge. This signal has to be pulled low according to transfer cycle rules, depending on the type of the cycle. The signal uses the QL bus DTACKL pin and is compatible with it when used for narrow cycles. * bit QL peripherals will not see wide cycles and will not generate this signal on a wide cycle.

-AUTO:
Autoterminated cycle in progress. This signal uses the QL bus BGL pin, and it's function is NOT compatible with the QL definition. The 68008 CPU MUST be removed from the system if a standard QL motherboard is used. The signal will go low whenever the autoterminated narrow IO area is accessed (see address map document). During an autoterminated cycle -WR has the usual function and -TACK is ignored.

Interrupts:

-HINT:
High priority interrupt. This signal uses the QL bus BERRL pin, which is normally used to cause a bus error exception or a cycle re-run. No known QL peripherals generate this signal, hence it was redefined as a high priority interrupt input, active low, edge triggered. On the GoldFire this signal is routed under program control to one of the IO CPU's interrupt levels.
**** Subject to changes: this signal MAY also be generated by the GoldFire when a dual CPU configuration is used and is used for multi-processor communications.

-LINT:
Low priority interrupt. This signal uses the QL bus IPL1 pin, and is compatible with the QL bus signal. This is an imput to the GoldFire which normally generates a level 2 interrupt to the IO CPU.

-EINT:
External interrupt. This signal uses the QL bus EXTINTL pin and has the same function as the QL signal of that name. Normally it is only a compatibility signal but can also be generated by the GoldFire when it's on-board IO needs to generate an interrupt which is chained into -LINT, normally a level 2 interrupt. This interrupt is handled by the 8302 ULA and routes in software to a linked list of external interrupts.

System board generated:

-RESET:
Reset signal, goes low on power up or when reset button is pressed. Fully QL compatible.

-POLL:
Polling interrupt signal, 50Hz nominally. This signal uses the QL bus VSYNCH pin. The Aurora generates a constant 51.2Hz signal on this line, because it's vertical synch is variable, depending on monitor and resolution chosen. The signal is used ONLY to generate a polling interrupt via the 8302 ULA, but is also an input to the GoldFire interrupt hardware, so that in the future the 8302 chip can be replaced with different hardware.

Compatibility signals generated by GoldFire:

DDEC:
Decoder disable. This signal uses the QL bus DSMCL pin and is similar in function with the corresponding QL bus signal. When DDEC is pulled high, either the QL motherboard or the Aurora will disable their internal decoders and not decode any of their on-board devices. This signal is generated by the GoldFire to enable the use of extended addressing for narrow cycles. In particular, it disables the motherboard decoder logic to prevent aliasing of motherboard devices into the extended part of the addressing range when a narrow cycle is generated - it is pulled high whenever A23..20 are not 0000b or when A19..18 are either 01b or 10b on a narrow cycle.

Compatibility signals not used by GoldFire:

CLK:
7.5MHz QL system clock, generated by the motherboard, normally not used in the system.

RFSH:
Refresh clock. This signal uses the QL bus CSYNCHL pin, and normally carries the CSYNCH signal if a QL motherboard is in use, or a constant 16384Hz signal if an Aurora is in use. This signal is normally used by the GC or SGC as a refresh timing signal. The GoldFire generates it's own refresh timing hence does not need to use this signal.

-VPA:
Valid Peripheral Address. This signal is only used to force autovectoring of interrupts on a standard QL and a GC. Both the standard motherboard and the Aurora generate a low on this line when the FC0 and FC1 lines are both high. Since these lines have also been redefined into data and address lines, the state of -VPA will be undeterminate. The GoldFire uses a different mechanism to force autovectoring of interrupts and does not use this signal.

-IPL0:
Interrupt priority 0 and 2 tied together. This line is used to generate level 5 or level 7 interrupts on a QL. These are normally never generated, hence the line is not used by the GoldFire.

ROMOE:
ROM enable on the QL motherboard. Both the QL motherboard and the Aurora generate this signal for use with the ROM slot. The GoldFire doesn't use it.

Reserved lines:

The lines used on the QL bus as R, G, B, and DBGL are considered reserved. The GoldFire doesn't use them.

OTHER CHANGES TO THE BUS SIGNALS

Redefined signals:
The following QL signals have been redefined:
FC0 ---> nA20, wA20/D20
FC1 ---> nA21, wA21/D21
FC2 ---> nA22, wA22/D22
E   ---> nA23, wA23/D23
The signals FC0 and FC1 generate the QL signal VPAL, this is the responsibility of the motherboard in use. Since the GoldFire doesn't use the VPAL signal, nor do any of the peripherals that work on modern QLs, the spurious generation of VPAL based on the states of A20 and A21 will not present a problem.

BUS PROTOCOLS:

Narrow cycles, QL compatible:
              _____________________  ....  __________________
Axx       XXXX_____________________XX....XX__________________XX..
              _____________________  ....              ____    ..
Dxx       XXXX_____________________XX....XXXXXXXXXXXXXX____XXXX..
                                     ....  __________________  ..
-WR       XXXX_____________________XX....XX           |    | XX..
          ______                _____....____         |   _____..
-NTRQ           \______________/             \___________/ |
                                     ....             |    |   ..
-TACK     XXXXXX\\\\\\\\\\\\\____XXXX....XXXX\\\\\\\\\\_____/XX..
             |  |           |  | ||       |  |        |  | | |
             1  2           3  4 65       1  2        3  4 6 5

Diagram points:
1..2      Address setup time, data setup time on write cycles
2..3      -TACK dead time
3..4      Input setup time, (Data on read, -TACK on any cycle)
4..5      Address hold time, data hold time on write cycles
4..6      Input signal hold time (Data on read, -TACK on any cycle)

**** Subject to changes:
preliminary timing figures:
t(1,2) = min. 25ns
t(3,4) = min. 6ns (signal MUST be stable by point 4) (final spec)
t(4,5) = min. 25ns (final spec)
t(4,6) = min. 6ns
t(2,3) = configurable, min. 25ns, max. 425ns

Two more types of cycles can be generated:
1) Auto-terminated cycle:
This is normally visible on the bus as address and data lines changeing without any of the -xTRQ signals going low. Instead, the -AUTO signal goes low and the other signals behave as in a standard cycle, except that -TACK is ignored. This type of cycle is generated for on-board IO and Flash ROM accesses but also has other uses (see 'address map' document).
2) Termination time-out:
If -TACK is not pulled low within cca 2us, the cycle will time out and terminate. The written data will be removed from the bus and the read data will be indeterminate. No exception will be generated. If the cycle was a RAM shadowed write, correct data will be written into RAM.

Wide cycles:
              _______ _____________  ....  _______        _____   ..
ADxx,BSxx XXXX_______X_____________XX....XX_______XXXXXXXX_____XXX..
                     |               ....  _____________________  ..
-WR       XXXX_____________________XX....XX              |      XX..
          ______     |           ____....____            |    ____..
-WTRQ           \_______________/            \_______________/ 
          _____________          ____....___________     |    ____..
-WDATA                 \________/                   \________/
          _______    |       ________...._____           |________..
-TACK            \\\___//////                 \\\___//////

           |  |  | | |     |  |  |      |  |  | | |    |   | ||
           1  2  3 4 5     6  7  8      1  2  3 4 5    6   7 98

Diagram points:
1..2      Address setup time
2..3      Address decode time, at point 3 address recognition is acknowledged
3..4      Input setup time, -TACK low recognised and data phase starts
4..5      Data setup time on write, address tri-state time on write
5..7    Data phase duration
6..7    Input setup time, -TACK high recognised and data phase ends
7..8    Data hold time for write cycles
7..9    Input hold time

**** Subject to changes:
preliminary timing figures:
t(1,2) = min. 25ns
t(2,3) = min. 25ns - t(3,4) = min. 19ns (fastest cycle)
t(3,4) = min. 6ns (signal MUST be stable at point 3) (final spec)
t(4,5) = min. 25ns
t(5,7) = min. 25ns
t(6,7) = min. 6ns (signal MUST be stable at point 6) (final spec)
t(7,8) = min. 25ns
t(7,9) = min. 6ns (final spec)

One more type of cycle can be generated, Termination time-out:
If -TACK is not pulled low within cca 2us into the address phase, the cycle will time out and terminate without ever going into the data phase. At this point -WTRQ will go high and the address will be removed from the bus. The written data will be lost and the read data will be indeterminate. No exception will be generated. If the cycle was a RAM shadowed write, correct data will be written into RAM. The data phase does not have a timeout feature, as long as -TACK is low, the bus is in the data phase.

Notes:

The GoldFire uses write buffering to decouple the CPU from the bus. This means that while a write is waiting for completion on the bus, the CPU may continue accessing RAM data. The CPU will only be stalled if another IO cycle occurs while the current cycle is still in progress on the bus.

The -TACK line has a strong pull-up on the board to improve rise time when the open collector line is released. For maximum speed this will not be enough, so it is recomended to actively drive the -TACK line as long as -NTRQ or -WTRQ are low, respectively.