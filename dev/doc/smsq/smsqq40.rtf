{\rtf1\ansi\deff0\deftab720{\fonttbl{\f0\fswiss MS Sans Serif;}{\f1\froman\fcharset2 Symbol;}{\f2\fswiss Arial;}{\f3\froman Times New Roman;}{\f4\froman Bookman Old Style;}}
{\colortbl\red0\green0\blue0;}
\deflang2057\pard\plain\f2\fs36 SMSQ/E for Q40
\par \pard\li284\tx8789\tx9072\plain\f4\fs24 Introduction\tab 
\par Machine Type\tab 
\par \pard\li851\tx9072\plain\f4\fs20 MACHINE\tab 
\par PROCESSOR\tab 
\par \pard\li284\tx8789\tx9072\plain\f4\fs24 Memory Protection\tab 
\par \pard\li851\tx9072\plain\f4\fs20 PROT_MEM\tab 
\par POKES POKES_W POKES_L\tab 
\par PEEKS PEEKS_W PEEKS_L\tab 
\par \pard\li284\tx8789\tx9072\plain\f4\fs24 Q40 Display Modes\tab 
\par \pard\li851\tx9072\plain\f4\fs20 DISP_TYPE\tab 
\par DISP_INVERSE\tab 
\par DISP_SIZE\tab 
\par DISP_RATE\tab 
\par DISP_BLANK\tab 
\par \pard\li284\tx8789\tx9072\plain\f4\fs24 Serial (RS232) Ports on the Q40\tab 
\par \pard\li567\tx9072\plain\f4\fs20 Mouse driver\tab 
\par \pard\li284\tx8789\tx9072\plain\f4\fs24 Parallel Printer Ports\tab 
\par \pard\li851\tx9072\plain\f4\fs20 PAR_PULSE\tab 
\par PAR_WAIT\tab 
\par \pard\li284\tx8789\tx9072\plain\f4\fs24 Q40 Hard Disks\tab 
\par \pard\li567\tx9072\plain\f4\fs20 IDE drives\tab 
\par WIN Drive Numbers and Name\tab 
\par \pard\li851\tx9072\plain\f4\fs20 WIN_DRIVE\tab 
\par WIN_DRIVE$\tab 
\par WIN_USE\tab 
\par \pard\li567\tx9072\plain\f4\fs20 Formatting WIN Drives\tab 
\par WIN Control Commands\tab 
\par \pard\li851\tx9072\plain\f4\fs20 WIN_WP\tab 
\par WIN_START\tab 
\par WIN_STOP\tab 
\par \pard\li284\tx8789\tx9072\plain\f4\fs24 Q40 Floppy Disks\tab 
\par \pard\li567\tx9072\plain\f4\fs20 Floppy Disk Driver Name\tab 
\par \pard\li851\tx9072\plain\f4\fs20 FLP_USE\tab 
\par \pard\li567\tx9072\plain\f4\fs20 Formatting Diskettes\tab 
\par \pard\li851\tx9072\plain\f4\fs20 FLP_DENSITY\tab 
\par FLP_TRACK\tab 
\par \pard\li567\tx9072\plain\f4\fs20 FLP Control Commands\tab 
\par \pard\li851\tx9072\plain\f4\fs20 FLP_SEC\tab 
\par FLP_START\tab 
\par FLP_STEP\tab 
\par \pard\plain\f4\fs26\b Introduction
\par \pard\li567\plain\f4\fs22 From the point of view of the hardware dependent features, SMSQ/E as implemented on the Q40 is very similar to other SMSQ implementations. The only significant differences are minor improvements.
\par The hard disk and floppy disk drivers can handle multiple disk formats, two floppy disk drives and four hard disk drives. Two IO cards can be used to provide up to 4 serial ports and 3 parallel printer ports.
\par \pard\plain\f4\fs26\b Machine Type
\par \pard\li567\plain\f4\fs22 The two standard functions to determine the machine type are, of course, supported.
\par \pard\plain\f4\fs24 MACHINE
\par \pard\li567\plain\f4\fs22 The MACHINE function returns the machine type. This function returns 17 for the standard Q40.
\par \pard\plain\f4\fs24 PROCESSOR
\par \pard\li567\plain\f4\fs22 The PROCESSOR function returns the 680x0 family member - 40 for the Q40.
\par \pard\plain\f4\fs26\b Memory Protection
\par \pard\li567\plain\f4\fs22 All production Q40s include a memory management unit but this is not yet fully used by SMSQ/E. The PROT_MEM procedure has, therefore, no effect in current versions and the supervisor mode access peeks and pokes do not have any different effect from there user mode cousins.
\par \pard\plain\f4\fs24 PROT_MEM
\par \pard\li567\plain\f4\fs22 The PROT_MEM (level) procedure sets the level of the memory protection. This is ignored in current versions.
\par \pard\plain\f4\fs24 POKES POKES_W POKES_L
\par \pard\li567\plain\f4\fs22 POKES (\plain\f4\fs22\i address, value\plain\f4\fs22 ) POKES_W (\plain\f4\fs22\i address, value\plain\f4\fs22 ) and POKES_L (\plain\f4\fs22\i address, value\plain\f4\fs22 ) are the "supervisor mode" equivalents of POKE, POKE_W and POKE_L. By operating in supervisor mode they enable data to be written to the QL IO hardware. Do not be surprised if your computer self-destructs when you use them.
\par \pard\plain\f4\fs24 PEEKS PEEKS_W PEEKS_L
\par \pard\li567\plain\f4\fs22 PEEKS (\plain\f4\fs22\i address\plain\f4\fs22 ) PEEKS_W (\plain\f4\fs22\i address\plain\f4\fs22 ) and PEEKS_L (\plain\f4\fs22\i address\plain\f4\fs22 ) are the "supervisor mode" equivalents of PEEK, PEEK_W and PEEK_L. By operating in supervisor mode they enable data to be written to the QL IO hardware. Do not be surprised if your computer self-destructs when you use them.
\par \pard\plain\f4\fs26\b Q40 Display
\par \plain\f4\fs24 DISP_TYPE
\par \pard\li567\plain\f4\fs22 The DISP_TYPE function is used to find the type of display. For the Q40, there are two values that may be returned.
\par \pard\li993\fi-426\tx993\tx1418\tx1843\tx2268\plain\f4\fs22 0\tab Original ST QL emulator (this value is returned on QL based hardware).
\par 1\tab 16 bit colour mode.
\par \pard\li567\ri397\tx993\tx1418\tx1843\tx2268\tx2694\tx3119\tx3544\tx3969\tx4395\tx4820\tx5245\tx7938\tx8505\plain\f2\fs20 ncol = 4\tab \tab \tab \tab \tab \tab \plain\f2\fs20\i Assume 4 colour display\plain\f2\fs20 
\par if DISP_TYPE = 1: ncol = 65536\tab \plain\f2\fs20\i If it is 16 bit the are 65536 colours\plain\f2\fs20 
\par \pard\plain\f4\fs24 DISP_INVERSE
\par \pard\li567\plain\f4\fs22 The DISP_INVERSE (\plain\f4\fs22\i 0 or 1\plain\f4\fs22 ) command is used to invert a monochome display. It has no effect on the Q40.
\par \pard\plain\f4\fs24 DISP_SIZE
\par \pard\li567\plain\f4\fs22 DISP_SIZE (\plain\f4\fs22\i xpixels, ylines\plain\f4\fs22 ) is used to set the display size. When a size greater than 512x256 is specified, 16 bit colour mode is selected (not implemented in this version).
\par \pard\li567\ri397\tx993\tx1418\tx1843\tx2268\tx2694\tx3119\tx3544\tx3969\tx4395\tx4820\tx5245\tx7938\tx8505\plain\f2\fs20 DISP_SIZE 1024,512\tab \tab \plain\f2\fs20\i change to 1024x512 16 bit colour mode.\plain\f2\fs20 
\par \pard\plain\f4\fs24 DISP_RATE
\par \pard\li567\plain\f4\fs22 DISP_RATE (\plain\f4\fs22\i frame rate, line rate\plain\f4\fs22 ) is used to specify the frame and line scan rates. It has no effect on the Q40
\par \pard\plain\f4\fs24 DISP_BLANK
\par \pard\li567\plain\f4\fs22 DISP_BLANK (\plain\f4\fs22\i x blank, y blank\plain\f4\fs22 ) sets the size of the blank area to the sides of and above and below the image. It has no effect on the Q40
\par \pard\plain\f4\fs26\b Mouse driver
\par \pard\li567\plain\f4\fs22 The mouse driver checks serial ports 4, 3, 2 and 1, in that order, looking for a Microsoft compatible two or three button mouse. If a mouse is used, it should be plugged into the highest port number available.
\par Because current serial mice for the PC have a much higher resolution (the pointer moves faster) than older mice, the original pointer interface scheme (accelerating slow mice) is no longer adequate. The new MOUSE_SPEED command is used to define the "acceleration". The value specified for the MOUSE_SPEED is the same as the value that can be specified in the QPAC2 SYSDEF menu.
\par \pard\plain\f4\fs24 MOUSE_SPEED
\par \pard\li567\plain\f4\fs22 MOUSE_SPEED (\plain\f4\fs22\i #channel,\plain\f4\fs22  \plain\f4\fs22\i speed, wake\plain\f4\fs22 ) defines both a scaling for the mouse movement and an acceleration factor used for large movements.
\par \plain\f4\fs12 
\par \plain\f4\fs22 Speed\tab Scaling\tab Acceleration\tab 
\par 0\tab 1/8\tab low\tab 
\par 1\tab 1/8\tab normal\tab 
\par 2\tab 1/4\tab low\tab 
\par 3\tab 1/4\tab normal\tab 
\par 4\tab 1/2\tab low\tab 
\par 5\tab 1/2\tab normal\tab 
\par 6\tab 1\tab low\tab 
\par 7\tab 1\tab normal\tab 
\par 8\tab 1\tab high\tab 
\par 9\tab 1\tab extreme\tab 
\par The optional \plain\f4\fs22\i wake \plain\f4\fs22 defines how far the mouse will need to move before the pointer will appear (waking up the pointer) in a text input window.
\par The \plain\f4\fs22\i channel\plain\f4\fs22  is optional, if the default channel is available, and is a console, no channel need be specified.
\par \pard\li567\ri397\tx993\tx1418\tx1843\tx2268\tx2694\tx3119\tx3544\tx3969\tx4395\tx4820\tx5245\tx7938\tx8505\plain\f2\fs20 MOUSE_SPEED 2\tab \tab \tab \tab \tab \tab \plain\f2\fs20\i standard Microsoft mouse with low acceleration
\par \plain\f2\fs20 MOUSE_SPEED #0,5,8\tab \tab \tab \tab \tab \plain\f2\fs20\i cheap mouse with acceleration,
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab pointer reluctant to wake up\plain\f2\fs20 
\par \pard\li567\plain\f4\fs22 Speeds 7 to 9 are the same as for previous versions. Speeds 0 to 6 are all slower than in previous versions. If a "low acceleration" speed is chosen, the pointer movement may be slightly viscous (this is an advantage in some applications). The default mouse speed is 7 (old mouse with normal acceleration). This default is overwritten by a configurable speed when QPAC2 is loaded.
\par The default wake speed is 3 which is fairly sensitive. This default is overwritten by a configurable speed when QPAC2 is loaded.
\par \pard\plain\f4\fs24 MOUSE_STUFF
\par \pard\li567\plain\f4\fs22 MOUSE_STUFF (\plain\f4\fs22\i #channel,\plain\f4\fs22  \plain\f4\fs22\i string\plain\f4\fs22 ) defines a 0, 1 or 2 character string to be stuffed into the keyboard queue when the centre (or left and right) buttons are pressed. This is usually used to send a Hotkey. If a Hotkey is required, the first character should be CHR$(255).
\par \pard\li567\ri397\tx993\tx1418\tx1843\tx2268\tx2694\tx3119\tx3544\tx3969\tx4395\tx4820\tx5245\tx7938\tx8505\plain\f2\fs20 ERT HOT_THING (".", "Button_Pick")\tab \tab \plain\f2\fs20\i ALT . picks the button bar
\par \plain\f2\fs20 MOUSE_STUFF CHR$(255) & "."\tab \tab \tab \plain\f2\fs20\i The middle mouse button picks the button bar\plain\f2\fs20 
\par \pard\li567\plain\f4\fs22 The default stuff string is CHR$(255) & ".". This default is overwritten by a configurable Hotkey when QPAC2 is loaded.
\par The \plain\f4\fs22\i channel\plain\f4\fs22  is optional, if the default channel is available, and is a console, no channel need be specified.
\par \pard\plain\f4\fs26\b Serial (RS232) Ports on the Q40
\par \pard\li567\plain\f4\fs22 The serial ports correspond to the standard IBM COM ports. Note that, unlike the PC BIOS SMSQ does not attempt to renumber the ports if it finds that one or more are missing
\par \pard\li993\fi-426\tx993\tx1418\tx1843\tx2268\plain\f4\fs22 SER1\tab \tab COM1\tab \tab address $3F8
\par SER2\tab \tab COM2\tab \tab address $2F8
\par SER3\tab \tab COM1/3\tab address $3E8
\par SER4\tab \tab COM2/4\tab address $2E8
\par \pard\li567\plain\f4\fs22 The baud rates correspond to the normal PC baud rates: standard rates up to 38400 baud and then 57600, 115200, 230400, 460800 and 921600 baud. Only 16550A/16450 compatible serial ports are supported (i.e. any IO card made in the past few years). The availability of rates above 115200 depends on whether the IO card supports these rates and whether the mechanism to produce these rates is recognised by the drivers.
\par \pard\li567\ri397\tx993\tx1418\tx1843\tx2268\tx2694\tx3119\tx3544\tx3969\tx4395\tx4820\tx5245\tx7938\tx8505\plain\f2\fs20 BAUD 2,38400\tab \tab \tab \plain\f2\fs20\i . . . sets SER2 to 38400 baud
\par \plain\f2\fs20 BAUD 57600\tab \tab \tab \tab \plain\f2\fs20\i . . . sets SER1 to 57600 baud\plain\f2\fs20 
\par \pard\li567\plain\f4\fs22 All the SMSQ/E standard serial port control commands are avail.
\par \pard\plain\f4\fs26\b Parallel Printer Ports
\par \pard\li567\plain\f4\fs22 The parallel printer ports correspond to the standard IBM LPT ports.
\par \pard\li993\fi-426\tx993\tx1418\tx1843\tx2268\plain\f4\fs22 PAR1\tab \tab LPT1/2\tab address $378
\par PAR2\tab \tab LPT2/3\tab address $278
\par PAR3\tab \tab LPT1/2/3\tab address $3BC
\par \pard\li567\plain\f4\fs22 The standard parallel port driver assumes that the parallel port is IEEE\~1284 compatible (ECP) and it will normally operate in SPP FIFO mode. The port can also operate in original PC mode. There are three reasons for operating in original PC mode.
\par \pard\li993\fi-426\tx993\tx1418\tx1843\tx2268\plain\f4\fs22 1.Some IO cards are not compatible, in ECP mode, with the Q40 interrupt system. If possible, this problem should be resolved by removing the IRQ7/IRQ5 jumper so that the card does not produce parallel port interrupts at all. It may, however, be necessary to set the jumpers on the card to SPP (original PC) mode.
\par 2.Some printers may require a longer strobe pulse than is provided in FIFO mode.
\par 3.It is PAR3 which is the LPT port at address $3BC. This is not an ECP port address.
\par \pard\plain\f4\fs24 PAR_PULSE
\par \pard\li567\plain\f4\fs22 PAR_PULSE (\plain\f4\fs22\i port, pulse length\plain\f4\fs22 ) sets the notional strobe pulse length in ISA bus cycles. If the port is not specified, PAR1 is assumed. If the pulse length is zero, then the parallel printer port will operate in FIFO mode. If it is greater than 0, then the parallel printer port will operate in original PC mode.
\par \pard\li567\ri397\tx993\tx1418\tx1843\tx2268\tx2694\tx3119\tx3544\tx3969\tx4395\tx4820\tx5245\tx7938\tx8505\plain\f2\fs20 PAR_PULSE 2,2\tab \tab \tab \plain\f2\fs20\i drive an old Epson printer on PAR2
\par \plain\f2\fs20 PAR_PULSE 0\tab \tab \tab \plain\f2\fs20\i . . . set PAR 1 to FIFO mode\plain\f2\fs20 
\par \pard\li567\plain\f4\fs22 FIFO mode should be used if possible. The default value for PAR_PULSE is 0 if the IO card is configured for ECP mode or 1 if the IO card is configured for SPP mode.
\par \pard\plain\f4\fs24 PAR_WAIT
\par \pard\li567\plain\f4\fs22 PAR_WAIT (\plain\f4\fs22\i port, wait cycles\plain\f4\fs22 ) sets the length of time that the parallel port drive will wait for the printer to be ready before it gives up and lets the Q40 do something else. This has no effect in FIFO mode, but in original PC mode it allows the buffer in the printer to be stuffed in bursts. The default value is 0. The larger the value, the higher the probability that a more than one byte of data can be sent on each interrupt, but the higher the load on the machine.
\par If the IO card does not provide IRQ7 and the machine is busy, PAR_PULSE with have a much greater effect than if IRQ7 is used and/or the machine is idle.
\par \pard\li567\ri397\tx993\tx1418\tx1843\tx2268\tx2694\tx3119\tx3544\tx3969\tx4395\tx4820\tx5245\tx7938\tx8505\plain\f2\fs20 PAR_WAIT 2,20\tab \tab \tab \plain\f2\fs20\i give the printer on PAR2 a high priority.
\par \plain\f2\fs20 PAR_WAIT 0\tab \tab \tab \tab \plain\f2\fs20\i . . . set PAR 1 use the minimum of processor time.\plain\f2\fs20 
\par \pard\li567\plain\f4\fs22 For an Epson Stylus COLOR Pro printer, PAR_PAUSE 10 and PAR_PAUSE 50 improved the transfer speed by 30% on an idle machine: the rate was primarily determined by the printer. On a busy machine with no interrupts, PAR_PAUSE 10 improved the transfer speed by a factor of 3 and PAR_PAUSE 50 improved the transfer speed by a factor of 5. The speed of other tasks in the machine was reduced.
\par \pard\plain\f4\fs26\b Q40 Hard Disks
\par \plain\f4\fs26 IDE drives
\par \pard\li567\plain\f4\fs22 The current IDE driver does not support removable drives.
\par \pard\plain\f4\fs26 WIN Drive Numbers and Name
\par \pard\li567\plain\f4\fs22 ATA (IDE) drives are identified by the bus to which they are attached (primary or secondary), whether they are drive 0 or 1 on that bus (for historical reasons these are often called the master and slave drive although ATA compliant drives are neither master nor slaves: they are truly independent) and a partition on the drive.
\par Windows numbers its drives from C: as it finds them. This causes chaos if a removable media drive (or a normal drive in a rack) is used. (One of my PCs is obsessed by a phantom drive F: it thinks it is a 100kbyte CDROM).
\par SMSQ/E adopts a rather more cumbersome approach which is, however, much more precise. The initialisation code will attempt to find a file called "BOOT" on any partition on drive 0. WIN1 will be set to this partition. Thereafter, you must define your own WIN drives for any other drive and partition you wish to access.
\par This means that if, for example, you have a drive in a rack, the other drive numbers stay the same regardless of whether the drive is in or out when you boot the system.
\par SMSQ/E does not require the whole of a drive to be used for itself: the drive can be partitioned between different operating systems. Depending on the format of used by the other operating systems, SMSQ/E may be able to read or write these "foreign" partitions. Partitions are number from 0.
\par \pard\plain\f4\fs24 WIN_DRIVE
\par \pard\li567\plain\f4\fs22 WIN_DRIVE (\plain\f4\fs22\i drive, target, unit, partition\plain\f4\fs22 ) is used to select a particular drive, unit and partition combination to be accessed using a particular WIN drive.
\par The "target" and "unit" notion comes from the SCSI bus terminology, the target is a physical device and the unit is a subdivision of that device. For IDE bus drives, there is only one unit per drive so the unit number is always zero and may be omitted. If the partition is omitted as well, then partition 0 (or the whole drive) is assumed.
\par \pard\li567\tx1134\tx2835\tx4536\plain\f4\fs22 \tab Target\tab Bus\tab Drive
\par \tab 0\tab Primary\tab 0 (Master)
\par \tab 1\tab Primary\tab 1 (Slave)
\par \tab 2\tab Secondary\tab 0 (Master)
\par \tab 3\tab Secondary\tab 1 (Slave)
\par \pard\li567\plain\f4\fs22 Issuing a WIN_DRIVE command for a particular drive will cause the drive map to be re-read the next time the disk is accessed. It can, therefore, be used to force the drivers to recognise a disk change.
\par \pard\li567\ri397\tx993\tx1418\tx1843\tx2268\tx2694\tx3119\tx3544\tx3969\tx4395\tx4820\tx5245\tx7938\tx8505\plain\f2\fs20 WIN_DRIVE 2,0,1\tab \tab \plain\f2\fs20\i WIN2 is drive 0 on the primary bus, partition 1
\par \plain\f2\fs20 WIN_DRIVE 3,3\tab \tab \plain\f2\fs20\i WIN3 is drive 1 on the secondary bus (whole drive or partition 0)
\par \pard\plain\f4\fs24 WIN_DRIVE$
\par \pard\li567\plain\f4\fs22 WIN_DRIVE$ is a function which returns a string giving the target, unit and partition used by a particular WIN drive.
\par \pard\li567\ri397\tx993\tx1418\tx1843\tx2268\tx2694\tx3119\tx3544\tx3969\tx4395\tx4820\tx5245\tx7938\tx8505\plain\f2\fs20 WIN_DRIVE 2,0,1\tab \tab \plain\f2\fs20\i WIN2 is drive 0 on the primary bus, partition 1
\par \plain\f2\fs20 WIN_DRIVE 3,3\tab \tab \plain\f2\fs20\i WIN3 is drive 1 on the secondary bus (whole drive or partition 0)
\par \plain\f2\fs20 PRINT WIN_DRIVE$(2)\tab \tab \plain\f2\fs20\i Prints 0,0,1
\par \plain\f2\fs20 PRINT WIN_DRIVE$(3)\tab \tab \plain\f2\fs20\i Prints 3,0,0\plain\f2\fs20 
\par \pard\plain\f4\fs24 WIN_USE
\par \pard\li567\plain\f4\fs22 WIN_USE may be used to set the name of the WIN device. The name should be 3 characters long and in upper or lower case.
\par \pard\li567\ri397\tx993\tx1418\tx1843\tx2268\tx2694\tx3119\tx3544\tx3969\tx4395\tx4820\tx5245\tx7938\tx8505\plain\f2\fs20 WIN_USE MDV\tab \tab \tab \plain\f2\fs20\i The WIN device is renamed MDV\plain\f2\fs20 
\par WIN_USE win\tab \tab \tab \plain\f2\fs20\i The WIN device is restored to WIN
\par \plain\f2\fs20 WIN_USE\tab \tab \tab \tab \plain\f2\fs20\i The WIN device is restored to WIN\plain\f2\fs20 
\par \pard\plain\f4\fs26 Formatting WIN Drives
\par \pard\li567\plain\f4\fs22 If a drive is unformatted (or not recognisably formatted) you can format the whole drive as an SMSQ drive.
\par \pard\li567\ri397\tx993\tx1418\tx1843\tx2268\tx2694\tx3119\tx3544\tx3969\tx4395\tx4820\tx5245\tx7938\tx8505\plain\f2\fs20 WIN_FORMAT 1\tab \tab \tab \plain\f2\fs20\i Allow WIN drives to be formatted
\par \plain\f2\fs20 WIN_DRIVE 3,2\tab \tab \tab \plain\f2\fs20\i Set WIN3 to secondary drive 0, whole drive
\par \plain\f2\fs20 FORMAT win3_Fred\tab \tab \plain\f2\fs20\i FORMAT WIN3
\par \plain\f2\fs20 WIN_FORMAT 0\tab \tab \tab \plain\f2\fs20\i Prevent WIN drives from being formatted
\par \pard\li567\plain\f4\fs22 On the other hand, if you wish to share a drive between different operating systems, you can partition the drive by executing the MKPART utility before formatting.
\par \pard\li567\ri397\tx993\tx1418\tx1843\tx2268\tx2694\tx3119\tx3544\tx3969\tx4395\tx4820\tx5245\tx7938\tx8505\plain\f2\fs20 WIN_FORMAT 1\tab \tab \tab \plain\f2\fs20\i Allow WIN drives to be formatted
\par \plain\f2\fs20 WIN_DRIVE 3,2,1\tab \tab \tab \plain\f2\fs20\i Set WIN3 to secondary drive 0, partition 1
\par \plain\f2\fs20 EW MKPART\tab \tab \tab \tab \plain\f2\fs20\i Partition drive, setting partition 1 to "QWA"
\par \plain\f2\fs20 FORMAT win3_Fred\tab \tab \plain\f2\fs20\i FORMAT WIN3
\par \plain\f2\fs20 WIN_FORMAT 0\tab \tab \tab \plain\f2\fs20\i Prevent WIN drives from being formatted
\par \pard\plain\f4\fs26 WIN Control Commands
\par \pard\li567\plain\f4\fs22 There are a number of "odd" WIN device control commands.
\par \pard\plain\f4\fs24 WIN_WP
\par \pard\li567\plain\f4\fs22 WIN_WP (\plain\f4\fs22\i drive, 0 or 1\plain\f4\fs22 ) is used to software write protect a WIN drive.
\par \pard\li567\ri397\tx993\tx1418\tx1843\tx2268\tx2694\tx3119\tx3544\tx3969\tx4395\tx4820\tx5245\tx7938\tx8505\plain\f2\fs20 WIN_WP 1,1\tab \tab \tab \tab \plain\f2\fs20\i Set the "write protect" flag for the drive accessed by WIN1
\par \plain\f2\fs20 WIN_WP 1,0\tab \tab \tab \tab \plain\f2\fs20\i Clear the "write protect" flag for the drive accessed by WIN1
\par \pard\plain\f4\fs24 WIN_START
\par WIN_STOP
\par \pard\li567\plain\f4\fs22 The WIN_START (\plain\f4\fs22\i drive\plain\f4\fs22 ) and WIN_STOP (\plain\f4\fs22\i drive, time)\plain\f4\fs22  commands may be used to start and stop a drive. If a time is given on the WIN_STOP command, the drive should not stop immediately: the time is the period without any disk accesses that that must elapse before the drive automatically enters standby mode. A zero time cancels the automatic standby timer.
\par \pard\li567\ri397\tx993\tx1418\tx1843\tx2268\tx2694\tx3119\tx3544\tx3969\tx4395\tx4820\tx5245\tx7938\tx8505\plain\f2\fs20 WIN_STOP 2\tab \tab \tab \tab \plain\f2\fs20\i Stop the drive accessed by WIN2 now
\par \plain\f2\fs20 WIN_STOP 2,3\tab \tab \tab \plain\f2\fs20\i Stop the drive accessed by WIN2 when there has been no
\par \tab \tab \tab \tab \tab \tab access for 3 minutes
\par \plain\f2\fs20 WIN_STOP 2,0\tab \tab \tab \plain\f2\fs20\i Do not stop the drive accessed by WIN2
\par \plain\f2\fs20 WIN_START 2\tab \tab \tab \plain\f2\fs20\i Start the drive accessed by WIN2
\par \pard\li567\plain\f4\fs22 Note that all the operations that might be used to restart a drive (there is no "official" ATA command) are "vendor specific": on your particular drive, the drive may not start again until you try and read from (or write to) the drive, or it may never start again. You should also note that, on some drives, WIN_STOP\~\plain\f4\fs22\i drive,\~time\plain\f4\fs22  will not only set the timer but stop the drive immediately as well.
\par As with any ATA command, these commands will work if they work, otherwise they will not work.
\par \pard\plain\f4\fs26\b Q40 Floppy Disks
\par \pard\li567\plain\f4\fs22 The Q40 will normally have one or two HD disk drives The SMSQ/E FLP driver can read or write QL5A, QL5B and MSDOS format diskettes. It can format QL5A (DD) and QL5B (HD) format diskettes.
\par \pard\plain\f4\fs26 Floppy Disk Driver Name
\par \pard\li567\plain\f4\fs22 The default name of the floppy disk driver is FLP. The internal drive is FLP1. The external drive (if any) is FLP2.
\par \pard\plain\f4\fs24 FLP_USE
\par \pard\li567\plain\f4\fs22 FLP_USE may be used to set the name of the FLP device. The name should be 3 characters long and in upper or lower case.
\par \pard\li567\ri397\tx993\tx1418\tx1843\tx2268\tx2694\tx3119\tx3544\tx3969\tx4395\tx4820\tx5245\tx7938\tx8505\plain\f2\fs20 FLP_USE mdv\tab \tab \tab \plain\f2\fs20\i The FLP device is renamed MDV\plain\f2\fs20 
\par FLP_USE FLP\tab \tab \tab \plain\f2\fs20\i The FLP device is restored to FLP
\par \plain\f2\fs20 FLP_USE\tab \tab \tab \tab \plain\f2\fs20\i The FLP device is restored to FLP\plain\f2\fs20 
\par \pard\plain\f4\fs26 Formatting Diskettes
\par \pard\li567\plain\f4\fs22 The SMSQ/E FLP driver will usually format a diskette to the highest density it can. The density may, however, be set using the FLP_DENSITY command or by adding a special code to the end of the medium name in the format command.
\par \pard\plain\f4\fs24 FLP_DENSITY
\par \pard\li567\plain\f4\fs22 The SMSQ/E format routines will usually attempt to format a disk to the highest density possible for a medium. The FLP_DENSITY (\plain\f4\fs22\i code\plain\f4\fs22 ) is used to specify a particular recording density during format.
\par The density codes are "S" for single sided (double density), "D" for double density and "H" for high density.
\par \pard\li567\ri397\tx993\tx1418\tx1843\tx2268\tx2694\tx3119\tx3544\tx3969\tx4395\tx4820\tx5245\tx7938\tx8505\plain\f2\fs20 FLP_DENSITY S\tab \tab \tab \plain\f2\fs20\i Set the default format to single sided
\par \plain\f2\fs20 FLP_DENSITY H\tab \tab \tab \plain\f2\fs20\i Set the default format to high density
\par \plain\f2\fs20 FLP_DENSITY\tab \tab \tab \plain\f2\fs20\i Reset to automatic density selection
\par \pard\li567\plain\f4\fs22 The same code letters may be added (after a *) to the end of the medium name to force a particular density format. (For compatibility with older drivers, if the code letter is omitted after the *, single sided format is assumed.
\par \pard\li567\ri397\tx993\tx1418\tx1843\tx2268\tx2694\tx3119\tx3544\tx3969\tx4395\tx4820\tx5245\tx7938\tx8505\plain\f2\fs20 FORMAT 'FLP1_Disk23'\tab \plain\f2\fs20\i Format at highest density or as specified by FLP_DENSITY
\par \plain\f2\fs20 FORMAT 'FLP1_Disk24*'\tab \plain\f2\fs20\i Format single sided
\par \plain\f2\fs20 FORMAT 'FLP1_Disk25*S'\tab \plain\f2\fs20\i Format single sided
\par \plain\f2\fs20 FORMAT 'FLP1_Disk25*D'\tab \plain\f2\fs20\i Format double sided, double density\plain\f2\fs20 
\par \pard\plain\f4\fs24 FLP_TRACK
\par \pard\li567\plain\f4\fs22 The FLP_TRACK (\plain\f4\fs22\i number of tracks\plain\f4\fs22 ) is used to limit the number of tracks formatted.
\par \pard\li567\ri397\tx993\tx1418\tx1843\tx2268\tx2694\tx3119\tx3544\tx3969\tx4395\tx4820\tx5245\tx7938\tx8505\plain\f2\fs20 FLP_TRACK 23\tab \tab \tab \plain\f2\fs20\i Only format 23 tracks
\par \pard\plain\f4\fs26 FLP Control Commands
\par \plain\f4\fs24 FLP_SEC
\par \pard\li567\plain\f4\fs22 FLP_SEC (\plain\f4\fs22\i level\plain\f4\fs22 ) was used to set the security level. The security of the data stored on the diskettes can be seriously compromised if you change diskettes while there are files open. The security level affects the amount of time the FLP driver spends maintaining the data on the diskette up to date with the internal copies of the data in memory. In principle, a lower level is more efficient, but more risky. With the increasing use of hard disks, the security level of the FLP has been fixed at level 2: the most secure. FLP_SEC is ignored.
\par \pard\plain\f4\fs24 FLP_START
\par \pard\li567\plain\f4\fs22 The FLP_START (\plain\f4\fs22\i ticks\plain\f4\fs22 ) command specifies the number of ticks (1/50th of a second) that the FLP driver waits after starting the drive before writing to it. This allows the diskette to get up to speed before the write operation. The default value is 24, which is a wait of about 0.5 s. There should not be any reason to use this command.
\par \pard\plain\f4\fs24 FLP_STEP
\par \pard\li567\plain\f4\fs22 The FLP_STEP (\plain\f4\fs22\i drive, step\plain\f4\fs22 ) command specifies the step rate for a particular drive. If the drive number is omitted, the step rate applies to both drives. The step rate will be adjusted downwards by the driver if there are repeated seek errors. The FLP_STEP command should not, therefore, be necessary.
\par \pard\li567\ri397\tx993\tx1418\tx1843\tx2268\tx2694\tx3119\tx3544\tx3969\tx4395\tx4820\tx5245\tx7938\tx8505\plain\f2\fs20 FLP_STEP 2,15\tab \tab \tab \plain\f2\fs20\i Set FLP2 to 15 ms step rate
\par \plain\f2\fs20 FLP_STEP 3\tab \tab \tab \tab \plain\f2\fs20\i Set both drives to 3 ms step rate.
\par \pard\plain\f4\fs26\b Sampled Sound System
\par \pard\li567\plain\f4\fs22 The SMSQ/E sampled sound system for the Q40 assumes that a sampling rate of 20\~kHz will always be used.
\par The system is based on a 2 byte wide queue. Sound generators should stuff pairs of bytes (left, right) in the queue. The queue is 200 kilobytes long which allows up to 5 seconds free running. A normal "boing" can be set up in a single operation.
\par The SMSQ/E sampled sound system provides four basic functions to add a single sample, to add an arbitrary number of samples, to stop the sound and to estimate the length of sound samples remaining in the queue.
\par The SMSQ/E sampled sound system should be accessed in supervisor mode (in principal, this will be a sound device driver) via the interrupt level 4 auto vector.
\par \pard\li567\ri397\tx993\tx1418\tx1843\tx2268\tx2694\tx3119\tx3544\tx3969\tx4395\tx4820\tx5245\tx7938\tx8505\plain\f2\fs20 \tab move.l\tab $70,a3\tab \tab \tab \plain\f2\fs20\i interrupt level 4 auto vector\plain\f2\fs20 
\par \tab move.l\tab -(a3),a2\tab \tab \tab \plain\f2\fs20\i address of sample sound system functions\plain\f2\fs20 
\par \tab cmp.l\tab #'SSSS',-(a3)\tab \tab \plain\f2\fs20\i SMSQ/E Sampled Sound System\plain\f2\fs20 
\par \tab bne.s\tab oops
\par \'85\tab jsr\tab \tab $04(a2)\tab \tab \tab \plain\f2\fs20\i add a sample\plain\f2\fs20 
\par \'85\tab jsr\tab \tab $08(a2)\tab \tab \tab \plain\f2\fs20\i set up to add multiple samples\plain\f2\fs20 
\par \'85\tab jsr\tab \tab $0c(a2)\tab \tab \tab \plain\f2\fs20\i notify that multiple samples have been added\plain\f2\fs20 
\par \'85\tab jsr\tab \tab $10(a2)\tab \tab \tab \plain\f2\fs20\i kill the sound\plain\f2\fs20 
\par \pard\plain\f4\fs24 SSS_ADD1 ($04)
\par \pard\li567\plain\f4\fs22 The sss_add1 call is used to add one sample to the sound queue. To limit the overheads, it does not save any registers.
\par \pard\li567\ri397\tx993\tx1418\tx1843\tx2268\tx2694\tx3119\tx3544\tx3969\tx4395\tx4820\tx5245\tx7938\tx8505\plain\f2\fs20 D1\tab call byte\tab \tab left hand sound level
\par D2\tab call byte\tab \tab right hand sound level
\par A1\tab smashed
\par A3\tab call\tab \tab \tab pointer to 'SSSS' flag (see code above)
\par \pard\li567\plain\f4\fs22 The sound level is a byte value between 0 and 255. The sound "zero" level is 128. This should be the last value written to the left and right hand sound queues.
\par This call does not have a standard error return. It returns status Z if the operation sample has not been added because the queue is full.
\par \pard\plain\f4\fs24 SSS_SETM ($08)
\par \pard\li567\plain\f4\fs22 The sss_setm call sets up to add multiple samples to the sound queue.
\par \pard\li567\ri397\tx993\tx1418\tx1843\tx2268\tx2694\tx3119\tx3544\tx3969\tx4395\tx4820\tx5245\tx7938\tx8505\plain\f2\fs20 A1\tab return\tab \tab the pointer to the next free byte pair in the queue
\par A2\tab return\tab \tab the pointer past the last free byte pair in the queue
\par A3\tab call\tab \tab \tab pointer to 'SSSS' flag (see code above)
\par \pard\li567\plain\f4\fs22 The calling routine can fill the area from a1 to a2 with pairs of bytes. It does not, however, need to fill the whole of the area. When it has put samples into the queue, it should call SSS_ADDM to notify the sampled sound system.
\par \pard\plain\f4\fs24 SSS_ADDM ($0C)
\par \pard\li567\plain\f4\fs22 The sss_addm call notifies that samples have been added to the sound queue.
\par \pard\li567\ri397\tx993\tx1418\tx1843\tx2268\tx2694\tx3119\tx3544\tx3969\tx4395\tx4820\tx5245\tx7938\tx8505\plain\f2\fs20 A1\tab call\tab \tab \tab the updated pointer to the next free byte pair in the queue
\par A3\tab call\tab \tab \tab pointer to 'SSSS' flag (see code above)
\par \pard\li567\plain\f4\fs12 
\par \pard\li567\ri397\tx993\tx1418\tx1843\tx2268\tx2694\tx3119\tx3544\tx3969\tx4395\tx4820\tx5245\tx7938\tx8505\plain\f2\fs20 \tab move.l\tab $70,a3\tab \tab \tab \tab \tab \plain\f2\fs20\i interrupt level 4 auto vector\plain\f2\fs20 
\par \tab move.l\tab -(a3),a2\tab \tab \tab \tab \tab \plain\f2\fs20\i address of sample sound system functions\plain\f2\fs20 
\par \tab cmp.l\tab #'SSSS',-(a3)\tab \tab \tab \tab \plain\f2\fs20\i SMSQ/E Sampled Sound System\plain\f2\fs20 
\par \tab bne.s\tab oops
\par \tab jsr\tab \tab sss_setm(a2)\tab \tab \tab \tab set up
\par \tab bra.s\tab end_loop
\par loop
\par \tab calculate next sample in d1.b, d2.b
\par \tab move.b\tab d1,(a1)+\tab \tab \tab \tab \tab add left sample
\par \tab move.b\tab d2,(a1)+\tab \tab \tab \tab \tab add right sample
\par end_loop
\par \tab cmp.l\tab a2,a1\tab \tab \tab \tab \tab more samples to do?
\par \tab blt.s\tab \tab loop
\par \tab jsr\tab \tab sss_addm(a2)\tab \tab \tab \tab notify sampled sound system
\par \pard\plain\f4\fs24 SSS_KILL ($10)
\par \pard\li567\plain\f4\fs22 The sss_kill call stops the sound system and throws the queue away.
\par \pard\li567\ri397\tx993\tx1418\tx1843\tx2268\tx2694\tx3119\tx3544\tx3969\tx4395\tx4820\tx5245\tx7938\tx8505\plain\f2\fs20 A3\tab call\tab \tab \tab pointer to 'SSSS' flag (see code above)
\par \pard\plain\f4\fs24 SSS_SAMPLE ($14)
\par \pard\li567\plain\f4\fs22 The sss_sample call estimates the number of samples remaining in the queue. This figure should be divided by 400 to give the length of the sound in ticks or divided by 20000 to give the length of sound in seconds.
\par \pard\li567\ri397\tx993\tx1418\tx1843\tx2268\tx2694\tx3119\tx3544\tx3969\tx4395\tx4820\tx5245\tx7938\tx8505\plain\f2\fs20 D0\tab return long\tab number of samples remaining in queue
\par A3\tab call\tab \tab \tab pointer to 'SSSS' flag (see code above)
\par }
 